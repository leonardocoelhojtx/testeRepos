import { EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { AppSidebarService } from './app-sidebar.service';
import * as ɵngcc0 from '@angular/core';
export declare class AppSidebarComponent implements OnInit, OnDestroy {
    private document;
    private renderer;
    private sidebarService;
    private subscriptionEvents;
    private _minimized;
    compact: boolean;
    display: any;
    fixed: boolean;
    offCanvas: boolean;
    minimized: boolean;
    /**
     * Emits whenever the minimized state of the sidebar changes.
     * Primarily used to facilitate two-way binding.
     */
    minimizedChange: EventEmitter<boolean>;
    sidebarClass: boolean;
    constructor(document: any, renderer: Renderer2, sidebarService: AppSidebarService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    isCompact(compact?: boolean): void;
    isFixed(fixed?: boolean): void;
    toggleMinimized(): void;
    isOffCanvas(offCanvas?: boolean): void;
    displayBreakpoint(display?: any): void;
    private _updateMinimized;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AppSidebarComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AppSidebarComponent, "app-sidebar, cui-sidebar", never, {
    "minimized": "minimized";
    "compact": "compact";
    "display": "display";
    "fixed": "fixed";
    "offCanvas": "offCanvas";
}, {
    "minimizedChange": "minimizedChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXNpZGViYXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFwcC1zaWRlYmFyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIE9uSW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEFwcFNpZGViYXJTZXJ2aWNlIH0gZnJvbSAnLi9hcHAtc2lkZWJhci5zZXJ2aWNlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXBwU2lkZWJhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICAgIHByaXZhdGUgZG9jdW1lbnQ7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgcHJpdmF0ZSBzaWRlYmFyU2VydmljZTtcclxuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9uRXZlbnRzO1xyXG4gICAgcHJpdmF0ZSBfbWluaW1pemVkO1xyXG4gICAgY29tcGFjdDogYm9vbGVhbjtcclxuICAgIGRpc3BsYXk6IGFueTtcclxuICAgIGZpeGVkOiBib29sZWFuO1xyXG4gICAgb2ZmQ2FudmFzOiBib29sZWFuO1xyXG4gICAgbWluaW1pemVkOiBib29sZWFuO1xyXG4gICAgLyoqXHJcbiAgICAgKiBFbWl0cyB3aGVuZXZlciB0aGUgbWluaW1pemVkIHN0YXRlIG9mIHRoZSBzaWRlYmFyIGNoYW5nZXMuXHJcbiAgICAgKiBQcmltYXJpbHkgdXNlZCB0byBmYWNpbGl0YXRlIHR3by13YXkgYmluZGluZy5cclxuICAgICAqL1xyXG4gICAgbWluaW1pemVkQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XHJcbiAgICBzaWRlYmFyQ2xhc3M6IGJvb2xlYW47XHJcbiAgICBjb25zdHJ1Y3Rvcihkb2N1bWVudDogYW55LCByZW5kZXJlcjogUmVuZGVyZXIyLCBzaWRlYmFyU2VydmljZTogQXBwU2lkZWJhclNlcnZpY2UpO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBpc0NvbXBhY3QoY29tcGFjdD86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgaXNGaXhlZChmaXhlZD86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgdG9nZ2xlTWluaW1pemVkKCk6IHZvaWQ7XHJcbiAgICBpc09mZkNhbnZhcyhvZmZDYW52YXM/OiBib29sZWFuKTogdm9pZDtcclxuICAgIGRpc3BsYXlCcmVha3BvaW50KGRpc3BsYXk/OiBhbnkpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBfdXBkYXRlTWluaW1pemVkO1xyXG59XHJcbiJdfQ==