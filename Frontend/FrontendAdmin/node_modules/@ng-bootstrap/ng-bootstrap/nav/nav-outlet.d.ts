import { AfterViewInit, ChangeDetectorRef, ElementRef } from '@angular/core';
import { NgbNav, NgbNavItem } from './nav';
import * as ɵngcc0 from '@angular/core';
export declare class NgbNavPane {
    elRef: ElementRef<HTMLElement>;
    item: NgbNavItem;
    nav: NgbNav;
    role: string;
    constructor(elRef: ElementRef<HTMLElement>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgbNavPane>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NgbNavPane, "[ngbNavPane]", never, {
    "item": "item";
    "nav": "nav";
    "role": "role";
}, {}, never>;
}
/**
 * The outlet where currently active nav content will be displayed.
 *
 * @since 5.2.0
 */
export declare class NgbNavOutlet implements AfterViewInit {
    private _cd;
    private _activePane;
    private _panes;
    /**
     * A role to set on the nav pane
     */
    paneRole: any;
    /**
     * Reference to the `NgbNav`
     */
    nav: NgbNav;
    constructor(_cd: ChangeDetectorRef);
    isPanelTransitioning(item: NgbNavItem): boolean;
    ngAfterViewInit(): void;
    private _getPaneForItem;
    private _getActivePane;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgbNavOutlet>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgbNavOutlet, "[ngbNavOutlet]", never, {
    "paneRole": "paneRole";
    "nav": "ngbNavOutlet";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LW91dGxldC5kLnRzIiwic291cmNlcyI6WyJuYXYtb3V0bGV0LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7QUFNQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ2JOYXYsIE5nYk5hdkl0ZW0gfSBmcm9tICcuL25hdic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ2JOYXZQYW5lIHtcbiAgICBlbFJlZjogRWxlbWVudFJlZjxIVE1MRWxlbWVudD47XG4gICAgaXRlbTogTmdiTmF2SXRlbTtcbiAgICBuYXY6IE5nYk5hdjtcbiAgICByb2xlOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZWxSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+KTtcbn1cbi8qKlxuICogVGhlIG91dGxldCB3aGVyZSBjdXJyZW50bHkgYWN0aXZlIG5hdiBjb250ZW50IHdpbGwgYmUgZGlzcGxheWVkLlxuICpcbiAqIEBzaW5jZSA1LjIuMFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ2JOYXZPdXRsZXQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICBwcml2YXRlIF9jZDtcbiAgICBwcml2YXRlIF9hY3RpdmVQYW5lO1xuICAgIHByaXZhdGUgX3BhbmVzO1xuICAgIC8qKlxuICAgICAqIEEgcm9sZSB0byBzZXQgb24gdGhlIG5hdiBwYW5lXG4gICAgICovXG4gICAgcGFuZVJvbGU6IGFueTtcbiAgICAvKipcbiAgICAgKiBSZWZlcmVuY2UgdG8gdGhlIGBOZ2JOYXZgXG4gICAgICovXG4gICAgbmF2OiBOZ2JOYXY7XG4gICAgY29uc3RydWN0b3IoX2NkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgaXNQYW5lbFRyYW5zaXRpb25pbmcoaXRlbTogTmdiTmF2SXRlbSk6IGJvb2xlYW47XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBfZ2V0UGFuZUZvckl0ZW07XG4gICAgcHJpdmF0ZSBfZ2V0QWN0aXZlUGFuZTtcbn1cbiJdfQ==