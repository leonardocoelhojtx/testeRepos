/**
 * timer-box.component
 */
import { AfterViewInit, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class OwlTimerBoxComponent implements OnInit, AfterViewInit, OnDestroy {
    showDivider: boolean;
    upBtnAriaLabel: string;
    upBtnDisabled: boolean;
    downBtnAriaLabel: string;
    downBtnDisabled: boolean;
    /**
     * Value would be displayed in the box
     * If it is null, the box would display [value]
     * */
    boxValue: number;
    value: number;
    min: number;
    max: number;
    step: number;
    inputLabel: string;
    valueChange: EventEmitter<number>;
    inputChange: EventEmitter<number>;
    input: any;
    private inputStream;
    private inputStreamSub;
    get displayValue(): number;
    get owlDTTimerBoxClass(): boolean;
    constructor();
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    upBtnClicked(): void;
    downBtnClicked(): void;
    handleInputChange(val: string, input: any): void;
    afterInputChange(input: any): void;
    private updateValue;
    private updateValueViaInput;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OwlTimerBoxComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OwlTimerBoxComponent, "owl-date-time-timer-box", ["owlDateTimeTimerBox"], {
    "showDivider": "showDivider";
    "step": "step";
    "upBtnAriaLabel": "upBtnAriaLabel";
    "upBtnDisabled": "upBtnDisabled";
    "downBtnAriaLabel": "downBtnAriaLabel";
    "downBtnDisabled": "downBtnDisabled";
    "boxValue": "boxValue";
    "value": "value";
    "min": "min";
    "max": "max";
    "inputLabel": "inputLabel";
}, {
    "valueChange": "valueChange";
    "inputChange": "inputChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXItYm94LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ0aW1lci1ib3guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiB0aW1lci1ib3guY29tcG9uZW50XG4gKi9cbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE93bFRpbWVyQm94Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHNob3dEaXZpZGVyOiBib29sZWFuO1xuICAgIHVwQnRuQXJpYUxhYmVsOiBzdHJpbmc7XG4gICAgdXBCdG5EaXNhYmxlZDogYm9vbGVhbjtcbiAgICBkb3duQnRuQXJpYUxhYmVsOiBzdHJpbmc7XG4gICAgZG93bkJ0bkRpc2FibGVkOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFZhbHVlIHdvdWxkIGJlIGRpc3BsYXllZCBpbiB0aGUgYm94XG4gICAgICogSWYgaXQgaXMgbnVsbCwgdGhlIGJveCB3b3VsZCBkaXNwbGF5IFt2YWx1ZV1cbiAgICAgKiAqL1xuICAgIGJveFZhbHVlOiBudW1iZXI7XG4gICAgdmFsdWU6IG51bWJlcjtcbiAgICBtaW46IG51bWJlcjtcbiAgICBtYXg6IG51bWJlcjtcbiAgICBzdGVwOiBudW1iZXI7XG4gICAgaW5wdXRMYWJlbDogc3RyaW5nO1xuICAgIHZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcbiAgICBpbnB1dENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgaW5wdXQ6IGFueTtcbiAgICBwcml2YXRlIGlucHV0U3RyZWFtO1xuICAgIHByaXZhdGUgaW5wdXRTdHJlYW1TdWI7XG4gICAgZ2V0IGRpc3BsYXlWYWx1ZSgpOiBudW1iZXI7XG4gICAgZ2V0IG93bERUVGltZXJCb3hDbGFzcygpOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHVwQnRuQ2xpY2tlZCgpOiB2b2lkO1xuICAgIGRvd25CdG5DbGlja2VkKCk6IHZvaWQ7XG4gICAgaGFuZGxlSW5wdXRDaGFuZ2UodmFsOiBzdHJpbmcsIGlucHV0OiBhbnkpOiB2b2lkO1xuICAgIGFmdGVySW5wdXRDaGFuZ2UoaW5wdXQ6IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSB1cGRhdGVWYWx1ZTtcbiAgICBwcml2YXRlIHVwZGF0ZVZhbHVlVmlhSW5wdXQ7XG59XG4iXX0=