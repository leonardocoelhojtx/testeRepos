import * as ɵngcc0 from '@angular/core';
export interface FileSelectResult {
    /** The added files, emitted in the filesAdded event. */
    addedFiles: File[];
    /** The rejected files, emitted in the filesRejected event. */
    rejectedFiles: RejectedFile[];
}
export interface RejectedFile extends File {
    /** The reason the file was rejected. */
    reason?: RejectReason;
}
export declare type RejectReason = 'type' | 'size' | 'no_multiple';
/**
 * This service contains the filtering logic to be applied to
 * any dropped or selected file. If a file matches all criteria
 * like maximum size or accept type, it will be emitted in the
 * addedFiles array, otherwise in the rejectedFiles array.
 */
export declare class NgxDropzoneService {
    parseFileList(files: FileList, accept: string, maxFileSize: number, multiple: boolean): FileSelectResult;
    private isAccepted;
    private rejectFile;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxDropzoneService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NgxDropzoneService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRyb3B6b25lLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsibmd4LWRyb3B6b25lLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBGaWxlU2VsZWN0UmVzdWx0IHtcbiAgICAvKiogVGhlIGFkZGVkIGZpbGVzLCBlbWl0dGVkIGluIHRoZSBmaWxlc0FkZGVkIGV2ZW50LiAqL1xuICAgIGFkZGVkRmlsZXM6IEZpbGVbXTtcbiAgICAvKiogVGhlIHJlamVjdGVkIGZpbGVzLCBlbWl0dGVkIGluIHRoZSBmaWxlc1JlamVjdGVkIGV2ZW50LiAqL1xuICAgIHJlamVjdGVkRmlsZXM6IFJlamVjdGVkRmlsZVtdO1xufVxuZXhwb3J0IGludGVyZmFjZSBSZWplY3RlZEZpbGUgZXh0ZW5kcyBGaWxlIHtcbiAgICAvKiogVGhlIHJlYXNvbiB0aGUgZmlsZSB3YXMgcmVqZWN0ZWQuICovXG4gICAgcmVhc29uPzogUmVqZWN0UmVhc29uO1xufVxuZXhwb3J0IGRlY2xhcmUgdHlwZSBSZWplY3RSZWFzb24gPSAndHlwZScgfCAnc2l6ZScgfCAnbm9fbXVsdGlwbGUnO1xuLyoqXG4gKiBUaGlzIHNlcnZpY2UgY29udGFpbnMgdGhlIGZpbHRlcmluZyBsb2dpYyB0byBiZSBhcHBsaWVkIHRvXG4gKiBhbnkgZHJvcHBlZCBvciBzZWxlY3RlZCBmaWxlLiBJZiBhIGZpbGUgbWF0Y2hlcyBhbGwgY3JpdGVyaWFcbiAqIGxpa2UgbWF4aW11bSBzaXplIG9yIGFjY2VwdCB0eXBlLCBpdCB3aWxsIGJlIGVtaXR0ZWQgaW4gdGhlXG4gKiBhZGRlZEZpbGVzIGFycmF5LCBvdGhlcndpc2UgaW4gdGhlIHJlamVjdGVkRmlsZXMgYXJyYXkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5neERyb3B6b25lU2VydmljZSB7XG4gICAgcGFyc2VGaWxlTGlzdChmaWxlczogRmlsZUxpc3QsIGFjY2VwdDogc3RyaW5nLCBtYXhGaWxlU2l6ZTogbnVtYmVyLCBtdWx0aXBsZTogYm9vbGVhbik6IEZpbGVTZWxlY3RSZXN1bHQ7XG4gICAgcHJpdmF0ZSBpc0FjY2VwdGVkO1xuICAgIHByaXZhdGUgcmVqZWN0RmlsZTtcbn1cbiJdfQ==